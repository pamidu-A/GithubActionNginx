name: CI

on:
  - push

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Create File
        uses: finnp/create-file-action@1.0.0
        env : {
          FILE_NAME = "secret.yaml"
          FILE_DATA = ""
        }
      

      - name : read secret
        run : cat secret.yaml

      - name: Trigger deploy
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f deployment.yaml -n githubaction
